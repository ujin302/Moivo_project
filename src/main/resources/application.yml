spring:
  port: 9090
  config:
    import: "classpath:external-config.properties"
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: "171f1e13421b3a8fd7cf7a1be6061a69"
            client-secret: "rjAeew9NrYPFpffzWaZcaDCPqFKkMg03"
            redirect-uri: "http://localhost:5173/oauth2/callback/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            scope:
              - profile_nickname    # 닉네임
              - profile_image       # 프로필 사진
              - account_email       # 이메일
            client-name: Kakao
            provider: kakao

          naver:
            client-id: "rkLzelLLwohrsT5K3PzP"
            client-secret: "oc5jSCKdG5"
            redirect-uri: "http://localhost:5173/api/user/oauth2/callback/naver"
            authorization-grant-type: authorization_code
            client-authentication-method: post
            scope:
              - name          # 회원이름
              - email         # 이메일
              - profile_image # 프로필 사진
              - gender        # 성별
              - birthday      # 생일
              - age_range     # 연령대
              - birthyear     # 출생연도
              - phone         # 휴대전화번호
            client-name: Naver
            provider: naver

          google:
            client-id: "679990079220-prfchh4nd9k9oit85na1guc84jk6pjje.apps.googleusercontent.com"
            client-secret: "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"
            redirect-uri: "http://localhost:8080/api/user/oauth2/callback/google"
            authorization-grant-type: authorization_code
            client-authentication-method: post
            scope:
              - email   # 이메일
              - profile # 프로필
            client-name: Google
            provider: google

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response.id

          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  datasource:
    # Oracle 설정
    # url: jdbc:oracle:thin:@localhost:1521:XE
    # username: c##java
    # password: 1234
    # driver-class-name: oracle.jdbc.driver.OracleDriver

    # MySQL 설정
    #  url: jdbc:mysql://localhost:3306/moivotest?useSSL=false&serverTimezone=Asia/Seoul
    #  username: root
    #  password: 1234
    #  driver-class-name: com.mysql.cj.jdbc.Driver

    # MySQL - NAVER Cloud 설정
    url: jdbc:mysql://db-2vrk3j-kr.vpc-pub-cdb.ntruss.com:3306/moivodb?serverTimezone=Asia/Seoul
    username: moivo
    password: bitcamp123!@#
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.dialect: org.hibernate.dialect.MySQL8Dialect

  servlet:
    multipart:
      max-file-size: -1 # 파일당 최대 크기 (-1은 무제한)
      max-request-size: -1 # 요청 전체 최대 크기 (-1은 무제한)

  mail:
    host: smtp.gmail.com # 12/11 16:57 조강민
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true
          ssl:
            enable: false

ncp:
  storage:
    access-key: 6A890BBDD2150DF9BDC5
    secret-key: E59E91B8E8475F97570C5CC1B44F87162DCDBF24
    region: kr-standard
    endpoint: http://kr.object.ncloudstorage.com


jwt:
  secret: ${jwt.secret}
  access-token-validity: 3600000  # 1시간
  refresh-token-validity: 604800000  # 7일

management:
  endpoints:
    web:
      exposure:
        include: beans # Actuator의 Bean 목록 확인

logging:
  level:
    org.springframework.security: DEBUG

#application.yml에 등록하면 git에 올릴때 인증정보가 노출되는 문제가 있어서
#노출되지 않길 원한다면 별도의 yml을 생성하여 인증정보만 관리하도록 하여 이를 .gitignore에서 처리
#yml은 resouce 디렉토리 하위에 google or naver.yml 파일생성.
#.gitignore에
###인증정보 제외
#/src/main/resources/google or naver.yml 추가
